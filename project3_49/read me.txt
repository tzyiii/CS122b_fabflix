Task 5How to compile:cd project3_49/project3_5_1/srcjavac *.javaTo run:cd project3_49/project3_5_1/binjava SAXparserOr import the exist project to your eclipse¡¯s workplace
Likely, The program after optimization is in project3_49/project3_5_2
To run:cd project3_49/project3_5_2/binjava SAXParserMainAWS IP address: 35.164.71.37
Tomcat manager app:username: admin password:123456When you deploy the war file, the name of the war file must be ¡°Project3¡±
Dashboard Link: https://35.164.71.37:8443/Project3/_dashboard.htmlPerformance Optimizations:1.First, we used the SAX parser rather than DOM parser so that we do not have to read the entire file into memory and we create each element when we encounter them. This allows you to read a very big XML file and serves to improve the performance of our inputs. 2.The second optimization method is that we can turn off auto-commit which is JDBC¡¯s default. Then we use batch insert as our commit method. This method allows machine to temporarily store those insert query at prepared statement, and the database didn¡¯t do any action before we commit it. This method upload a batch of data to the data base each time which can save the time consumed during uploading process and especially good for machine with normal hard drive. After using this method, we can increase the overall performance by about 60s.3.Thirdly, we can reduce the connection time. Normally, we build connection each time we need to do insertion. After optimization, we build the connection at the beginning of our communication with our database, and disconnect it after all the insertions have been done. So we save the time waste on building connection. The result shows that we can save about 40s.